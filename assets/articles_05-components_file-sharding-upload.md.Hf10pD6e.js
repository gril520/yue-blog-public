import{a5 as Gs,a6 as Qs,h as T,y as Zs,l as Ys,E as Q,o as D,c as M,J as H,w as ks,p as U,a as si,t as ii,e as us,m as ni,b as ei,a4 as Ss}from"./chunks/framework.BCDg3NR7.js";import{E as L}from"./chunks/index.D_pvN_pm.js";const ti={key:0,slot:"tip",class:"el-upload__tip"},ai={style:{width:"100px"}},ri={__name:"file-upload",props:{showFileList:{type:Boolean,default:()=>!0},uploadPercentage:{type:Number,default:()=>0},fileList:{type:Array,default:()=>[]},isUploading:{type:Boolean,default:()=>!1},isAutoReUploading:{type:Boolean,default:()=>!1}},setup(s){const{emit:i}=Gs(),n=s,{fileList:e,uploadPercentage:t,isUploading:a,isAutoReUploading:r}=Qs(n),p=T(null),d=T("点击上传"),h=f=>{p.value=f.file,c()},c=()=>{p.value&&i("start-upload",p.value)},o=f=>{i("handle-remove",f)};return Zs(a,f=>{f?d.value="正在上传":d.value="点击上传"}),Ys(()=>{}),(f,m)=>{const u=Q("el-button"),k=Q("el-progress"),y=Q("el-upload");return D(),M("div",null,[H(y,{class:"upload-demo",action:"/","file-list":U(e),"http-request":h,"on-remove":o,disabled:U(a),"show-file-list":s.showFileList},{default:ks(()=>[H(u,{type:"primary",disabled:U(a),loading:U(a)},{default:ks(()=>[si(ii(d.value),1)]),_:1},8,["disabled","loading"]),U(r)?(D(),M("div",ti," 文件过大，超时自动重传中... ")):us("",!0),ni("div",ai,[U(a)?(D(),ei(k,{key:0,"text-inside":!0,"stroke-width":16,percentage:U(t),"show-text":"",status:"success"},null,8,["percentage"])):us("",!0)])]),_:1},8,["file-list","disabled","show-file-list"])])}}};function Us(s,i){return function(){return s.apply(i,arguments)}}const{toString:li}=Object.prototype,{getPrototypeOf:ls}=Object,J=(s=>i=>{const n=li.call(i);return s[n]||(s[n]=n.slice(8,-1).toLowerCase())})(Object.create(null)),C=s=>(s=s.toLowerCase(),i=>J(i)===s),$=s=>i=>typeof i===s,{isArray:_}=Array,N=$("undefined");function pi(s){return s!==null&&!N(s)&&s.constructor!==null&&!N(s.constructor)&&F(s.constructor.isBuffer)&&s.constructor.isBuffer(s)}const Ts=C("ArrayBuffer");function oi(s){let i;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?i=ArrayBuffer.isView(s):i=s&&s.buffer&&Ts(s.buffer),i}const hi=$("string"),F=$("function"),Ps=$("number"),W=s=>s!==null&&typeof s=="object",di=s=>s===!0||s===!1,v=s=>{if(J(s)!=="object")return!1;const i=ls(s);return(i===null||i===Object.prototype||Object.getPrototypeOf(i)===null)&&!(Symbol.toStringTag in s)&&!(Symbol.iterator in s)},ci=C("Date"),ki=C("File"),ui=C("Blob"),Ei=C("FileList"),fi=s=>W(s)&&F(s.pipe),gi=s=>{let i;return s&&(typeof FormData=="function"&&s instanceof FormData||F(s.append)&&((i=J(s))==="formdata"||i==="object"&&F(s.toString)&&s.toString()==="[object FormData]"))},yi=C("URLSearchParams"),mi=s=>s.trim?s.trim():s.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function x(s,i,{allOwnKeys:n=!1}={}){if(s===null||typeof s>"u")return;let e,t;if(typeof s!="object"&&(s=[s]),_(s))for(e=0,t=s.length;e<t;e++)i.call(null,s[e],e,s);else{const a=n?Object.getOwnPropertyNames(s):Object.keys(s),r=a.length;let p;for(e=0;e<r;e++)p=a[e],i.call(null,s[p],p,s)}}function _s(s,i){i=i.toLowerCase();const n=Object.keys(s);let e=n.length,t;for(;e-- >0;)if(t=n[e],i===t.toLowerCase())return t;return null}const Os=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Ds=s=>!N(s)&&s!==Os;function ns(){const{caseless:s}=Ds(this)&&this||{},i={},n=(e,t)=>{const a=s&&_s(i,t)||t;v(i[a])&&v(e)?i[a]=ns(i[a],e):v(e)?i[a]=ns({},e):_(e)?i[a]=e.slice():i[a]=e};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&x(arguments[e],n);return i}const bi=(s,i,n,{allOwnKeys:e}={})=>(x(i,(t,a)=>{n&&F(t)?s[a]=Us(t,n):s[a]=t},{allOwnKeys:e}),s),Fi=s=>(s.charCodeAt(0)===65279&&(s=s.slice(1)),s),Ai=(s,i,n,e)=>{s.prototype=Object.create(i.prototype,e),s.prototype.constructor=s,Object.defineProperty(s,"super",{value:i.prototype}),n&&Object.assign(s.prototype,n)},Ci=(s,i,n,e)=>{let t,a,r;const p={};if(i=i||{},s==null)return i;do{for(t=Object.getOwnPropertyNames(s),a=t.length;a-- >0;)r=t[a],(!e||e(r,s,i))&&!p[r]&&(i[r]=s[r],p[r]=!0);s=n!==!1&&ls(s)}while(s&&(!n||n(s,i))&&s!==Object.prototype);return i},Bi=(s,i,n)=>{s=String(s),(n===void 0||n>s.length)&&(n=s.length),n-=i.length;const e=s.indexOf(i,n);return e!==-1&&e===n},wi=s=>{if(!s)return null;if(_(s))return s;let i=s.length;if(!Ps(i))return null;const n=new Array(i);for(;i-- >0;)n[i]=s[i];return n},Ri=(s=>i=>s&&i instanceof s)(typeof Uint8Array<"u"&&ls(Uint8Array)),Si=(s,i)=>{const e=(s&&s[Symbol.iterator]).call(s);let t;for(;(t=e.next())&&!t.done;){const a=t.value;i.call(s,a[0],a[1])}},Ui=(s,i)=>{let n;const e=[];for(;(n=s.exec(i))!==null;)e.push(n);return e},Ti=C("HTMLFormElement"),Pi=s=>s.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(n,e,t){return e.toUpperCase()+t}),Es=(({hasOwnProperty:s})=>(i,n)=>s.call(i,n))(Object.prototype),_i=C("RegExp"),Ns=(s,i)=>{const n=Object.getOwnPropertyDescriptors(s),e={};x(n,(t,a)=>{let r;(r=i(t,a,s))!==!1&&(e[a]=r||t)}),Object.defineProperties(s,e)},Oi=s=>{Ns(s,(i,n)=>{if(F(s)&&["arguments","caller","callee"].indexOf(n)!==-1)return!1;const e=s[n];if(F(e)){if(i.enumerable=!1,"writable"in i){i.writable=!1;return}i.set||(i.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")})}})},Di=(s,i)=>{const n={},e=t=>{t.forEach(a=>{n[a]=!0})};return _(s)?e(s):e(String(s).split(i)),n},Ni=()=>{},xi=(s,i)=>(s=+s,Number.isFinite(s)?s:i),Z="abcdefghijklmnopqrstuvwxyz",fs="0123456789",xs={DIGIT:fs,ALPHA:Z,ALPHA_DIGIT:Z+Z.toUpperCase()+fs},Ii=(s=16,i=xs.ALPHA_DIGIT)=>{let n="";const{length:e}=i;for(;s--;)n+=i[Math.random()*e|0];return n};function Li(s){return!!(s&&F(s.append)&&s[Symbol.toStringTag]==="FormData"&&s[Symbol.iterator])}const qi=s=>{const i=new Array(10),n=(e,t)=>{if(W(e)){if(i.indexOf(e)>=0)return;if(!("toJSON"in e)){i[t]=e;const a=_(e)?[]:{};return x(e,(r,p)=>{const d=n(r,t+1);!N(d)&&(a[p]=d)}),i[t]=void 0,a}}return e};return n(s,0)},vi=C("AsyncFunction"),ji=s=>s&&(W(s)||F(s))&&F(s.then)&&F(s.catch),l={isArray:_,isArrayBuffer:Ts,isBuffer:pi,isFormData:gi,isArrayBufferView:oi,isString:hi,isNumber:Ps,isBoolean:di,isObject:W,isPlainObject:v,isUndefined:N,isDate:ci,isFile:ki,isBlob:ui,isRegExp:_i,isFunction:F,isStream:fi,isURLSearchParams:yi,isTypedArray:Ri,isFileList:Ei,forEach:x,merge:ns,extend:bi,trim:mi,stripBOM:Fi,inherits:Ai,toFlatObject:Ci,kindOf:J,kindOfTest:C,endsWith:Bi,toArray:wi,forEachEntry:Si,matchAll:Ui,isHTMLForm:Ti,hasOwnProperty:Es,hasOwnProp:Es,reduceDescriptors:Ns,freezeMethods:Oi,toObjectSet:Di,toCamelCase:Pi,noop:Ni,toFiniteNumber:xi,findKey:_s,global:Os,isContextDefined:Ds,ALPHABET:xs,generateString:Ii,isSpecCompliantForm:Li,toJSONObject:qi,isAsyncFn:vi,isThenable:ji};function E(s,i,n,e,t){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=s,this.name="AxiosError",i&&(this.code=i),n&&(this.config=n),e&&(this.request=e),t&&(this.response=t)}l.inherits(E,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:l.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const Is=E.prototype,Ls={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(s=>{Ls[s]={value:s}});Object.defineProperties(E,Ls);Object.defineProperty(Is,"isAxiosError",{value:!0});E.from=(s,i,n,e,t,a)=>{const r=Object.create(Is);return l.toFlatObject(s,r,function(d){return d!==Error.prototype},p=>p!=="isAxiosError"),E.call(r,s.message,i,n,e,t),r.cause=s,r.name=s.name,a&&Object.assign(r,a),r};const zi=null;function es(s){return l.isPlainObject(s)||l.isArray(s)}function qs(s){return l.endsWith(s,"[]")?s.slice(0,-2):s}function gs(s,i,n){return s?s.concat(i).map(function(t,a){return t=qs(t),!n&&a?"["+t+"]":t}).join(n?".":""):i}function Mi(s){return l.isArray(s)&&!s.some(es)}const Hi=l.toFlatObject(l,{},null,function(i){return/^is[A-Z]/.test(i)});function K(s,i,n){if(!l.isObject(s))throw new TypeError("target must be an object");i=i||new FormData,n=l.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,function(k,y){return!l.isUndefined(y[k])});const e=n.metaTokens,t=n.visitor||c,a=n.dots,r=n.indexes,d=(n.Blob||typeof Blob<"u"&&Blob)&&l.isSpecCompliantForm(i);if(!l.isFunction(t))throw new TypeError("visitor must be a function");function h(u){if(u===null)return"";if(l.isDate(u))return u.toISOString();if(!d&&l.isBlob(u))throw new E("Blob is not supported. Use a Buffer instead.");return l.isArrayBuffer(u)||l.isTypedArray(u)?d&&typeof Blob=="function"?new Blob([u]):Buffer.from(u):u}function c(u,k,y){let b=u;if(u&&!y&&typeof u=="object"){if(l.endsWith(k,"{}"))k=e?k:k.slice(0,-2),u=JSON.stringify(u);else if(l.isArray(u)&&Mi(u)||(l.isFileList(u)||l.endsWith(k,"[]"))&&(b=l.toArray(u)))return k=qs(k),b.forEach(function(R,Xs){!(l.isUndefined(R)||R===null)&&i.append(r===!0?gs([k],Xs,a):r===null?k:k+"[]",h(R))}),!1}return es(u)?!0:(i.append(gs(y,k,a),h(u)),!1)}const o=[],f=Object.assign(Hi,{defaultVisitor:c,convertValue:h,isVisitable:es});function m(u,k){if(!l.isUndefined(u)){if(o.indexOf(u)!==-1)throw Error("Circular reference detected in "+k.join("."));o.push(u),l.forEach(u,function(b,w){(!(l.isUndefined(b)||b===null)&&t.call(i,b,l.isString(w)?w.trim():w,k,f))===!0&&m(b,k?k.concat(w):[w])}),o.pop()}}if(!l.isObject(s))throw new TypeError("data must be an object");return m(s),i}function ys(s){const i={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(s).replace(/[!'()~]|%20|%00/g,function(e){return i[e]})}function ps(s,i){this._pairs=[],s&&K(s,this,i)}const vs=ps.prototype;vs.append=function(i,n){this._pairs.push([i,n])};vs.toString=function(i){const n=i?function(e){return i.call(this,e,ys)}:ys;return this._pairs.map(function(t){return n(t[0])+"="+n(t[1])},"").join("&")};function Vi(s){return encodeURIComponent(s).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function js(s,i,n){if(!i)return s;const e=n&&n.encode||Vi,t=n&&n.serialize;let a;if(t?a=t(i,n):a=l.isURLSearchParams(i)?i.toString():new ps(i,n).toString(e),a){const r=s.indexOf("#");r!==-1&&(s=s.slice(0,r)),s+=(s.indexOf("?")===-1?"?":"&")+a}return s}class ms{constructor(){this.handlers=[]}use(i,n,e){return this.handlers.push({fulfilled:i,rejected:n,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(i){this.handlers[i]&&(this.handlers[i]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(i){l.forEach(this.handlers,function(e){e!==null&&i(e)})}}const zs={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Ji=typeof URLSearchParams<"u"?URLSearchParams:ps,$i=typeof FormData<"u"?FormData:null,Wi=typeof Blob<"u"?Blob:null,Ki={isBrowser:!0,classes:{URLSearchParams:Ji,FormData:$i,Blob:Wi},protocols:["http","https","file","blob","url","data"]},Ms=typeof window<"u"&&typeof document<"u",Xi=(s=>Ms&&["ReactNative","NativeScript","NS"].indexOf(s)<0)(typeof navigator<"u"&&navigator.product),Gi=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",Qi=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:Ms,hasStandardBrowserEnv:Xi,hasStandardBrowserWebWorkerEnv:Gi},Symbol.toStringTag,{value:"Module"})),A={...Qi,...Ki};function Zi(s,i){return K(s,new A.classes.URLSearchParams,Object.assign({visitor:function(n,e,t,a){return A.isNode&&l.isBuffer(n)?(this.append(e,n.toString("base64")),!1):a.defaultVisitor.apply(this,arguments)}},i))}function Yi(s){return l.matchAll(/\w+|\[(\w*)]/g,s).map(i=>i[0]==="[]"?"":i[1]||i[0])}function sn(s){const i={},n=Object.keys(s);let e;const t=n.length;let a;for(e=0;e<t;e++)a=n[e],i[a]=s[a];return i}function Hs(s){function i(n,e,t,a){let r=n[a++];if(r==="__proto__")return!0;const p=Number.isFinite(+r),d=a>=n.length;return r=!r&&l.isArray(t)?t.length:r,d?(l.hasOwnProp(t,r)?t[r]=[t[r],e]:t[r]=e,!p):((!t[r]||!l.isObject(t[r]))&&(t[r]=[]),i(n,e,t[r],a)&&l.isArray(t[r])&&(t[r]=sn(t[r])),!p)}if(l.isFormData(s)&&l.isFunction(s.entries)){const n={};return l.forEachEntry(s,(e,t)=>{i(Yi(e),t,n,0)}),n}return null}function nn(s,i,n){if(l.isString(s))try{return(i||JSON.parse)(s),l.trim(s)}catch(e){if(e.name!=="SyntaxError")throw e}return(n||JSON.stringify)(s)}const os={transitional:zs,adapter:["xhr","http"],transformRequest:[function(i,n){const e=n.getContentType()||"",t=e.indexOf("application/json")>-1,a=l.isObject(i);if(a&&l.isHTMLForm(i)&&(i=new FormData(i)),l.isFormData(i))return t?JSON.stringify(Hs(i)):i;if(l.isArrayBuffer(i)||l.isBuffer(i)||l.isStream(i)||l.isFile(i)||l.isBlob(i))return i;if(l.isArrayBufferView(i))return i.buffer;if(l.isURLSearchParams(i))return n.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),i.toString();let p;if(a){if(e.indexOf("application/x-www-form-urlencoded")>-1)return Zi(i,this.formSerializer).toString();if((p=l.isFileList(i))||e.indexOf("multipart/form-data")>-1){const d=this.env&&this.env.FormData;return K(p?{"files[]":i}:i,d&&new d,this.formSerializer)}}return a||t?(n.setContentType("application/json",!1),nn(i)):i}],transformResponse:[function(i){const n=this.transitional||os.transitional,e=n&&n.forcedJSONParsing,t=this.responseType==="json";if(i&&l.isString(i)&&(e&&!this.responseType||t)){const r=!(n&&n.silentJSONParsing)&&t;try{return JSON.parse(i)}catch(p){if(r)throw p.name==="SyntaxError"?E.from(p,E.ERR_BAD_RESPONSE,this,null,this.response):p}}return i}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:A.classes.FormData,Blob:A.classes.Blob},validateStatus:function(i){return i>=200&&i<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};l.forEach(["delete","get","head","post","put","patch"],s=>{os.headers[s]={}});const hs=os,en=l.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),tn=s=>{const i={};let n,e,t;return s&&s.split(`
`).forEach(function(r){t=r.indexOf(":"),n=r.substring(0,t).trim().toLowerCase(),e=r.substring(t+1).trim(),!(!n||i[n]&&en[n])&&(n==="set-cookie"?i[n]?i[n].push(e):i[n]=[e]:i[n]=i[n]?i[n]+", "+e:e)}),i},bs=Symbol("internals");function O(s){return s&&String(s).trim().toLowerCase()}function j(s){return s===!1||s==null?s:l.isArray(s)?s.map(j):String(s)}function an(s){const i=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let e;for(;e=n.exec(s);)i[e[1]]=e[2];return i}const rn=s=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(s.trim());function Y(s,i,n,e,t){if(l.isFunction(e))return e.call(this,i,n);if(t&&(i=n),!!l.isString(i)){if(l.isString(e))return i.indexOf(e)!==-1;if(l.isRegExp(e))return e.test(i)}}function ln(s){return s.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(i,n,e)=>n.toUpperCase()+e)}function pn(s,i){const n=l.toCamelCase(" "+i);["get","set","has"].forEach(e=>{Object.defineProperty(s,e+n,{value:function(t,a,r){return this[e].call(this,i,t,a,r)},configurable:!0})})}class X{constructor(i){i&&this.set(i)}set(i,n,e){const t=this;function a(p,d,h){const c=O(d);if(!c)throw new Error("header name must be a non-empty string");const o=l.findKey(t,c);(!o||t[o]===void 0||h===!0||h===void 0&&t[o]!==!1)&&(t[o||d]=j(p))}const r=(p,d)=>l.forEach(p,(h,c)=>a(h,c,d));return l.isPlainObject(i)||i instanceof this.constructor?r(i,n):l.isString(i)&&(i=i.trim())&&!rn(i)?r(tn(i),n):i!=null&&a(n,i,e),this}get(i,n){if(i=O(i),i){const e=l.findKey(this,i);if(e){const t=this[e];if(!n)return t;if(n===!0)return an(t);if(l.isFunction(n))return n.call(this,t,e);if(l.isRegExp(n))return n.exec(t);throw new TypeError("parser must be boolean|regexp|function")}}}has(i,n){if(i=O(i),i){const e=l.findKey(this,i);return!!(e&&this[e]!==void 0&&(!n||Y(this,this[e],e,n)))}return!1}delete(i,n){const e=this;let t=!1;function a(r){if(r=O(r),r){const p=l.findKey(e,r);p&&(!n||Y(e,e[p],p,n))&&(delete e[p],t=!0)}}return l.isArray(i)?i.forEach(a):a(i),t}clear(i){const n=Object.keys(this);let e=n.length,t=!1;for(;e--;){const a=n[e];(!i||Y(this,this[a],a,i,!0))&&(delete this[a],t=!0)}return t}normalize(i){const n=this,e={};return l.forEach(this,(t,a)=>{const r=l.findKey(e,a);if(r){n[r]=j(t),delete n[a];return}const p=i?ln(a):String(a).trim();p!==a&&delete n[a],n[p]=j(t),e[p]=!0}),this}concat(...i){return this.constructor.concat(this,...i)}toJSON(i){const n=Object.create(null);return l.forEach(this,(e,t)=>{e!=null&&e!==!1&&(n[t]=i&&l.isArray(e)?e.join(", "):e)}),n}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([i,n])=>i+": "+n).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(i){return i instanceof this?i:new this(i)}static concat(i,...n){const e=new this(i);return n.forEach(t=>e.set(t)),e}static accessor(i){const e=(this[bs]=this[bs]={accessors:{}}).accessors,t=this.prototype;function a(r){const p=O(r);e[p]||(pn(t,r),e[p]=!0)}return l.isArray(i)?i.forEach(a):a(i),this}}X.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);l.reduceDescriptors(X.prototype,({value:s},i)=>{let n=i[0].toUpperCase()+i.slice(1);return{get:()=>s,set(e){this[n]=e}}});l.freezeMethods(X);const B=X;function ss(s,i){const n=this||hs,e=i||n,t=B.from(e.headers);let a=e.data;return l.forEach(s,function(p){a=p.call(n,a,t.normalize(),i?i.status:void 0)}),t.normalize(),a}function Vs(s){return!!(s&&s.__CANCEL__)}function I(s,i,n){E.call(this,s??"canceled",E.ERR_CANCELED,i,n),this.name="CanceledError"}l.inherits(I,E,{__CANCEL__:!0});function on(s,i,n){const e=n.config.validateStatus;!n.status||!e||e(n.status)?s(n):i(new E("Request failed with status code "+n.status,[E.ERR_BAD_REQUEST,E.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n))}const hn=A.hasStandardBrowserEnv?{write(s,i,n,e,t,a){const r=[s+"="+encodeURIComponent(i)];l.isNumber(n)&&r.push("expires="+new Date(n).toGMTString()),l.isString(e)&&r.push("path="+e),l.isString(t)&&r.push("domain="+t),a===!0&&r.push("secure"),document.cookie=r.join("; ")},read(s){const i=document.cookie.match(new RegExp("(^|;\\s*)("+s+")=([^;]*)"));return i?decodeURIComponent(i[3]):null},remove(s){this.write(s,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function dn(s){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(s)}function cn(s,i){return i?s.replace(/\/?\/$/,"")+"/"+i.replace(/^\/+/,""):s}function Js(s,i){return s&&!dn(i)?cn(s,i):i}const kn=A.hasStandardBrowserEnv?function(){const i=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");let e;function t(a){let r=a;return i&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:n.pathname.charAt(0)==="/"?n.pathname:"/"+n.pathname}}return e=t(window.location.href),function(r){const p=l.isString(r)?t(r):r;return p.protocol===e.protocol&&p.host===e.host}}():function(){return function(){return!0}}();function un(s){const i=/^([-+\w]{1,25})(:?\/\/|:)/.exec(s);return i&&i[1]||""}function En(s,i){s=s||10;const n=new Array(s),e=new Array(s);let t=0,a=0,r;return i=i!==void 0?i:1e3,function(d){const h=Date.now(),c=e[a];r||(r=h),n[t]=d,e[t]=h;let o=a,f=0;for(;o!==t;)f+=n[o++],o=o%s;if(t=(t+1)%s,t===a&&(a=(a+1)%s),h-r<i)return;const m=c&&h-c;return m?Math.round(f*1e3/m):void 0}}function Fs(s,i){let n=0;const e=En(50,250);return t=>{const a=t.loaded,r=t.lengthComputable?t.total:void 0,p=a-n,d=e(p),h=a<=r;n=a;const c={loaded:a,total:r,progress:r?a/r:void 0,bytes:p,rate:d||void 0,estimated:d&&r&&h?(r-a)/d:void 0,event:t};c[i?"download":"upload"]=!0,s(c)}}const fn=typeof XMLHttpRequest<"u",gn=fn&&function(s){return new Promise(function(n,e){let t=s.data;const a=B.from(s.headers).normalize();let{responseType:r,withXSRFToken:p}=s,d;function h(){s.cancelToken&&s.cancelToken.unsubscribe(d),s.signal&&s.signal.removeEventListener("abort",d)}let c;if(l.isFormData(t)){if(A.hasStandardBrowserEnv||A.hasStandardBrowserWebWorkerEnv)a.setContentType(!1);else if((c=a.getContentType())!==!1){const[k,...y]=c?c.split(";").map(b=>b.trim()).filter(Boolean):[];a.setContentType([k||"multipart/form-data",...y].join("; "))}}let o=new XMLHttpRequest;if(s.auth){const k=s.auth.username||"",y=s.auth.password?unescape(encodeURIComponent(s.auth.password)):"";a.set("Authorization","Basic "+btoa(k+":"+y))}const f=Js(s.baseURL,s.url);o.open(s.method.toUpperCase(),js(f,s.params,s.paramsSerializer),!0),o.timeout=s.timeout;function m(){if(!o)return;const k=B.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),b={data:!r||r==="text"||r==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:k,config:s,request:o};on(function(R){n(R),h()},function(R){e(R),h()},b),o=null}if("onloadend"in o?o.onloadend=m:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(m)},o.onabort=function(){o&&(e(new E("Request aborted",E.ECONNABORTED,s,o)),o=null)},o.onerror=function(){e(new E("Network Error",E.ERR_NETWORK,s,o)),o=null},o.ontimeout=function(){let y=s.timeout?"timeout of "+s.timeout+"ms exceeded":"timeout exceeded";const b=s.transitional||zs;s.timeoutErrorMessage&&(y=s.timeoutErrorMessage),e(new E(y,b.clarifyTimeoutError?E.ETIMEDOUT:E.ECONNABORTED,s,o)),o=null},A.hasStandardBrowserEnv&&(p&&l.isFunction(p)&&(p=p(s)),p||p!==!1&&kn(f))){const k=s.xsrfHeaderName&&s.xsrfCookieName&&hn.read(s.xsrfCookieName);k&&a.set(s.xsrfHeaderName,k)}t===void 0&&a.setContentType(null),"setRequestHeader"in o&&l.forEach(a.toJSON(),function(y,b){o.setRequestHeader(b,y)}),l.isUndefined(s.withCredentials)||(o.withCredentials=!!s.withCredentials),r&&r!=="json"&&(o.responseType=s.responseType),typeof s.onDownloadProgress=="function"&&o.addEventListener("progress",Fs(s.onDownloadProgress,!0)),typeof s.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",Fs(s.onUploadProgress)),(s.cancelToken||s.signal)&&(d=k=>{o&&(e(!k||k.type?new I(null,s,o):k),o.abort(),o=null)},s.cancelToken&&s.cancelToken.subscribe(d),s.signal&&(s.signal.aborted?d():s.signal.addEventListener("abort",d)));const u=un(f);if(u&&A.protocols.indexOf(u)===-1){e(new E("Unsupported protocol "+u+":",E.ERR_BAD_REQUEST,s));return}o.send(t||null)})},ts={http:zi,xhr:gn};l.forEach(ts,(s,i)=>{if(s){try{Object.defineProperty(s,"name",{value:i})}catch{}Object.defineProperty(s,"adapterName",{value:i})}});const As=s=>`- ${s}`,yn=s=>l.isFunction(s)||s===null||s===!1,$s={getAdapter:s=>{s=l.isArray(s)?s:[s];const{length:i}=s;let n,e;const t={};for(let a=0;a<i;a++){n=s[a];let r;if(e=n,!yn(n)&&(e=ts[(r=String(n)).toLowerCase()],e===void 0))throw new E(`Unknown adapter '${r}'`);if(e)break;t[r||"#"+a]=e}if(!e){const a=Object.entries(t).map(([p,d])=>`adapter ${p} `+(d===!1?"is not supported by the environment":"is not available in the build"));let r=i?a.length>1?`since :
`+a.map(As).join(`
`):" "+As(a[0]):"as no adapter specified";throw new E("There is no suitable adapter to dispatch the request "+r,"ERR_NOT_SUPPORT")}return e},adapters:ts};function is(s){if(s.cancelToken&&s.cancelToken.throwIfRequested(),s.signal&&s.signal.aborted)throw new I(null,s)}function Cs(s){return is(s),s.headers=B.from(s.headers),s.data=ss.call(s,s.transformRequest),["post","put","patch"].indexOf(s.method)!==-1&&s.headers.setContentType("application/x-www-form-urlencoded",!1),$s.getAdapter(s.adapter||hs.adapter)(s).then(function(e){return is(s),e.data=ss.call(s,s.transformResponse,e),e.headers=B.from(e.headers),e},function(e){return Vs(e)||(is(s),e&&e.response&&(e.response.data=ss.call(s,s.transformResponse,e.response),e.response.headers=B.from(e.response.headers))),Promise.reject(e)})}const Bs=s=>s instanceof B?s.toJSON():s;function P(s,i){i=i||{};const n={};function e(h,c,o){return l.isPlainObject(h)&&l.isPlainObject(c)?l.merge.call({caseless:o},h,c):l.isPlainObject(c)?l.merge({},c):l.isArray(c)?c.slice():c}function t(h,c,o){if(l.isUndefined(c)){if(!l.isUndefined(h))return e(void 0,h,o)}else return e(h,c,o)}function a(h,c){if(!l.isUndefined(c))return e(void 0,c)}function r(h,c){if(l.isUndefined(c)){if(!l.isUndefined(h))return e(void 0,h)}else return e(void 0,c)}function p(h,c,o){if(o in i)return e(h,c);if(o in s)return e(void 0,h)}const d={url:a,method:a,data:a,baseURL:r,transformRequest:r,transformResponse:r,paramsSerializer:r,timeout:r,timeoutMessage:r,withCredentials:r,withXSRFToken:r,adapter:r,responseType:r,xsrfCookieName:r,xsrfHeaderName:r,onUploadProgress:r,onDownloadProgress:r,decompress:r,maxContentLength:r,maxBodyLength:r,beforeRedirect:r,transport:r,httpAgent:r,httpsAgent:r,cancelToken:r,socketPath:r,responseEncoding:r,validateStatus:p,headers:(h,c)=>t(Bs(h),Bs(c),!0)};return l.forEach(Object.keys(Object.assign({},s,i)),function(c){const o=d[c]||t,f=o(s[c],i[c],c);l.isUndefined(f)&&o!==p||(n[c]=f)}),n}const Ws="1.6.7",ds={};["object","boolean","number","function","string","symbol"].forEach((s,i)=>{ds[s]=function(e){return typeof e===s||"a"+(i<1?"n ":" ")+s}});const ws={};ds.transitional=function(i,n,e){function t(a,r){return"[Axios v"+Ws+"] Transitional option '"+a+"'"+r+(e?". "+e:"")}return(a,r,p)=>{if(i===!1)throw new E(t(r," has been removed"+(n?" in "+n:"")),E.ERR_DEPRECATED);return n&&!ws[r]&&(ws[r]=!0,console.warn(t(r," has been deprecated since v"+n+" and will be removed in the near future"))),i?i(a,r,p):!0}};function mn(s,i,n){if(typeof s!="object")throw new E("options must be an object",E.ERR_BAD_OPTION_VALUE);const e=Object.keys(s);let t=e.length;for(;t-- >0;){const a=e[t],r=i[a];if(r){const p=s[a],d=p===void 0||r(p,a,s);if(d!==!0)throw new E("option "+a+" must be "+d,E.ERR_BAD_OPTION_VALUE);continue}if(n!==!0)throw new E("Unknown option "+a,E.ERR_BAD_OPTION)}}const as={assertOptions:mn,validators:ds},S=as.validators;class V{constructor(i){this.defaults=i,this.interceptors={request:new ms,response:new ms}}async request(i,n){try{return await this._request(i,n)}catch(e){if(e instanceof Error){let t;Error.captureStackTrace?Error.captureStackTrace(t={}):t=new Error;const a=t.stack?t.stack.replace(/^.+\n/,""):"";e.stack?a&&!String(e.stack).endsWith(a.replace(/^.+\n.+\n/,""))&&(e.stack+=`
`+a):e.stack=a}throw e}}_request(i,n){typeof i=="string"?(n=n||{},n.url=i):n=i||{},n=P(this.defaults,n);const{transitional:e,paramsSerializer:t,headers:a}=n;e!==void 0&&as.assertOptions(e,{silentJSONParsing:S.transitional(S.boolean),forcedJSONParsing:S.transitional(S.boolean),clarifyTimeoutError:S.transitional(S.boolean)},!1),t!=null&&(l.isFunction(t)?n.paramsSerializer={serialize:t}:as.assertOptions(t,{encode:S.function,serialize:S.function},!0)),n.method=(n.method||this.defaults.method||"get").toLowerCase();let r=a&&l.merge(a.common,a[n.method]);a&&l.forEach(["delete","get","head","post","put","patch","common"],u=>{delete a[u]}),n.headers=B.concat(r,a);const p=[];let d=!0;this.interceptors.request.forEach(function(k){typeof k.runWhen=="function"&&k.runWhen(n)===!1||(d=d&&k.synchronous,p.unshift(k.fulfilled,k.rejected))});const h=[];this.interceptors.response.forEach(function(k){h.push(k.fulfilled,k.rejected)});let c,o=0,f;if(!d){const u=[Cs.bind(this),void 0];for(u.unshift.apply(u,p),u.push.apply(u,h),f=u.length,c=Promise.resolve(n);o<f;)c=c.then(u[o++],u[o++]);return c}f=p.length;let m=n;for(o=0;o<f;){const u=p[o++],k=p[o++];try{m=u(m)}catch(y){k.call(this,y);break}}try{c=Cs.call(this,m)}catch(u){return Promise.reject(u)}for(o=0,f=h.length;o<f;)c=c.then(h[o++],h[o++]);return c}getUri(i){i=P(this.defaults,i);const n=Js(i.baseURL,i.url);return js(n,i.params,i.paramsSerializer)}}l.forEach(["delete","get","head","options"],function(i){V.prototype[i]=function(n,e){return this.request(P(e||{},{method:i,url:n,data:(e||{}).data}))}});l.forEach(["post","put","patch"],function(i){function n(e){return function(a,r,p){return this.request(P(p||{},{method:i,headers:e?{"Content-Type":"multipart/form-data"}:{},url:a,data:r}))}}V.prototype[i]=n(),V.prototype[i+"Form"]=n(!0)});const z=V;class cs{constructor(i){if(typeof i!="function")throw new TypeError("executor must be a function.");let n;this.promise=new Promise(function(a){n=a});const e=this;this.promise.then(t=>{if(!e._listeners)return;let a=e._listeners.length;for(;a-- >0;)e._listeners[a](t);e._listeners=null}),this.promise.then=t=>{let a;const r=new Promise(p=>{e.subscribe(p),a=p}).then(t);return r.cancel=function(){e.unsubscribe(a)},r},i(function(a,r,p){e.reason||(e.reason=new I(a,r,p),n(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(i){if(this.reason){i(this.reason);return}this._listeners?this._listeners.push(i):this._listeners=[i]}unsubscribe(i){if(!this._listeners)return;const n=this._listeners.indexOf(i);n!==-1&&this._listeners.splice(n,1)}static source(){let i;return{token:new cs(function(t){i=t}),cancel:i}}}const bn=cs;function Fn(s){return function(n){return s.apply(null,n)}}function An(s){return l.isObject(s)&&s.isAxiosError===!0}const rs={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(rs).forEach(([s,i])=>{rs[i]=s});const Cn=rs;function Ks(s){const i=new z(s),n=Us(z.prototype.request,i);return l.extend(n,z.prototype,i,{allOwnKeys:!0}),l.extend(n,i,null,{allOwnKeys:!0}),n.create=function(t){return Ks(P(s,t))},n}const g=Ks(hs);g.Axios=z;g.CanceledError=I;g.CancelToken=bn;g.isCancel=Vs;g.VERSION=Ws;g.toFormData=K;g.AxiosError=E;g.Cancel=g.CanceledError;g.all=function(i){return Promise.all(i)};g.spread=Fn;g.isAxiosError=An;g.mergeConfig=P;g.AxiosHeaders=B;g.formToJSON=s=>Hs(l.isHTMLForm(s)?new FormData(s):s);g.getAdapter=$s.getAdapter;g.HttpStatusCode=Cn;g.default=g;const q="/fileShardingUpload",G={initMultiPartUpload:q+"/common/upload/initMultiPartUpload",mergeMultipartUpload:q+"/common/upload/mergeMultipartUpload",uploadPartFileUpload:q+"/common/upload/partFileUpload",deleteFileByPath:q+"/common/delete/deleteFileByPath"},Bn=async(s,i,n,e,t)=>{const a=Math.ceil(s.size/n),r={businessType:e,fileMd5:i,fileSize:s.size,fileName:s.name,partCount:a,partFileSize:n,saveType:t};return(await g.post(G.initMultiPartUpload,r)).result},wn=async s=>(await g.post(G.mergeMultipartUpload,s)).result,Rn=async s=>await g.post(G.uploadPartFileUpload,s,{headers:{"Content-Type":"multipart/form-data"},timeout:"60000"}),Sn=async(s,i)=>await g.post(G.deleteFileByPath,{filePath:s,saveType:i});class Un{constructor(i,n,e,t=3){if(console.log("file type",typeof i),this.chunkSize=5*1024*1024,this.autoReNum=t,this.fileInfo=null,this.businessType=n,this.saveType=e,this.start=0,!i)throw new Error("文件为空.");this.file=i,this.fileMd5=null,this.uploadedSize=0,this.isUploading=!1,this.isAutoReUploading=!1,this.onProgressListeners=new Set,this.fileInfoListeners=new Set,this.isUploadingListeners=new Set,this.isAutoReUploadingListeners=new Set}uploadFile(){return new Promise((i,n)=>{this.isUploading=!0,this.emitIsUploading(),this.uploadedSize=0,this.emitProgress(),this.start=new Date().getTime();const e=new Worker(new URL("/yue-blog-public/assets/md5-worker-BQj3zhV8.js",import.meta.url),{type:"module"});e.onmessage=t=>{this.fileMd5=t.data,this.uploadAction(i,n)},e.postMessage({file:this.file,chunkSize:this.chunkSize})})}async uploadAction(i,n){const{file:e,fileMd5:t,chunkSize:a,businessType:r,saveType:p}=this;try{const d=await Bn(e,t,a,r,p);if(d.fileInfo)return this.isUploading=!1,this.emitIsUploading(),this.uploadedSize=e.size,this.emitProgress(),this.fileInfo=d.fileInfo,this.emitFileInfo(),i({type:"success",message:"该文件已经存在服务器中.",fileInfo:this.fileInfo});if(d){const{partList:h,uploadId:c}=d,o=h.map(f=>this.handleChunkUpload(e,f,a));await Promise.all(o).then(()=>{const{name:f,size:m}=e;wn({fileMd5:t,fileName:f,fileSize:m,uploadId:c,businessType:r,saveType:p}).then(k=>(this.isUploading=!1,this.emitIsUploading(),this.uploadedSize=e.size,this.emitProgress(),this.fileInfo=k,this.emitFileInfo(),this.isAutoReUploading=!1,this.emitIsAutoReUploading(),i({type:"success",message:"文件上传成功.",fileInfo:this.fileInfo})))}).catch(f=>this.handleRetryUpload(f,i,n))}}catch(d){return this.isUploading=!1,this.emitIsUploading(),this.fileInfo=null,this.emitFileInfo(),n(d)}}async handleChunkUpload(i,n,e){const{partNumber:t,uploadUrl:a}=n,r=new Number(e)*(t-1),p=Math.min(r+new Number(e),i.size),d=i.slice(r,p),h=new FormData;return h.append("file",d),h.append("uploadUrl",a),h.append("saveType",this.saveType),await Rn(h).then(c=>{this.uploadedSize+=d.size,this.emitProgress()}),Promise.resolve(!0)}async handleRetryUpload(i,n,e){if(i.message.includes("timeout")&&this.autoReNum>0)this.isAutoReUploading=!0,this.emitIsAutoReUploading(),await this.uploadAction(n,e),this.autoReNum--;else return this.isUploading=!1,this.emitIsUploading(),this.isAutoReUploading=!1,this.emitIsAutoReUploading(),e(i)}emitProgress(){const i=this.file.size===0?0:Math.floor(this.uploadedSize/this.file.size*100);for(const n of this.onProgressListeners)n(i)}onProgress(i){this.onProgressListeners.add(i)}offProgress(i){this.onProgressListeners.delete(i)}emitIsUploading(){for(const i of this.isUploadingListeners)i(this.isUploading)}onIsUploading(i){this.isUploadingListeners.add(i)}offIsUploading(i){this.isUploadingListeners.delete(i)}emitIsAutoReUploading(){for(const i of this.isAutoReUploadingListeners)i(this.isAutoReUploading)}onIsAutoReUploading(i){this.isAutoReUploadingListeners.add(i)}offIsAutoReUploading(i){this.isAutoReUploadingListeners.delete(i)}emitFileInfo(){for(const i of this.fileInfoListeners)i(this.fileInfo)}onFileInfo(i){this.fileInfoListeners.add(i)}offFileInfo(i){this.fileInfoListeners.delete(i)}}const Tn="jxcc-common-file-dev",Rs="minio",Pn={__name:"file-sharding-upload",setup(s){const i=T(0),n=T([]),e=T(!1),t=T(!1),a=p=>{const d=new Un(p,Tn,Rs);d.onProgress(h=>{console.log("上传进度：",h+"%"),i.value=h}),d.onFileInfo(h=>{console.log("文件信息已更新：",h),n.value.push({...h,url:h.fileUrl,name:h.fileName,uid:p.uid})}),d.onIsUploading(h=>{console.log("isUploading：",h),e.value=h}),d.onIsAutoReUploading(h=>{console.log("isAutoReUploading：",h),t=h}),d.uploadFile().then(h=>{console.log(h),L.success({title:"成功",message:h.message})}).catch(h=>{console.error(h),L.error({title:"错误",message:"文件上传失败"})})},r=p=>{console.log("options",p),Sn(p.filePath,Rs).then(d=>{d.success?(L.success({title:"成功",message:"删除成功"}),n.value=n.value.filter(h=>h.name!==p.fileName)):L.error({title:"错误",message:"删除失败"})})};return(p,d)=>(D(),M("div",null,[H(ri,{"upload-percentage":i.value,"file-list":n.value,"is-uploading":e.value,"is-auto-re-uploading":t.value,onStartUpload:a,onHandleRemove:r},null,8,["upload-percentage","file-list","is-uploading","is-auto-re-uploading"])]))}},_n=Ss('<h1 id="trfileshardingupload-文件分片上传" tabindex="-1">TrFileShardingUpload 文件分片上传 <a class="header-anchor" href="#trfileshardingupload-文件分片上传" aria-label="Permalink to &quot;TrFileShardingUpload 文件分片上传&quot;">​</a></h1><p>文件分片上传，适用于大文件上传场景。组件支持分片上传，断点续传；若文件过大，第一次未传输成功，再次选择该文件可续传。</p><p>目前组件支持minio和fastdfs上传。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><p>基础的文件分片上传用法</p><h1 id="docs" tabindex="-1">Docs <a class="header-anchor" href="#docs" aria-label="Permalink to &quot;Docs&quot;">​</a></h1><p>This is a .md using a custom component</p>',7),On=Ss(`<p>::: demo</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">file-sharding-upload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          :upload-percentage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uploadPercentage&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          :file-list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fileList&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          :is-uploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isUploading&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          :is-auto-re-uploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isAutoReUploading&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          @start-upload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handleStartUpload&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          @handle-remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handleRemove&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FileShardingUpload </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./demo/file-sharding-upload/file-upload.vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { TrFileShardingUpload } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./demo/file-sharding-upload/uploads.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { delateFileByPath } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./demo/file-sharding-upload/file-sharding-upload-api&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  components: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TrOnlyOffice,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    FileShardingUpload</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Buckets 名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      businessType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;jxcc-common-file-dev&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 两种不同的分布式存储方案 minio | fastdfs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      saveType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;minio&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploadPercentage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      fileList: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      isUploading: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      isAutoReUploading: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  methods: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    handleStartUpload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // new TrFileShardingUpload</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uploader</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TrFileShardingUpload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.businessType, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.saveType)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 处理进度更新事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;上传进度：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.uploadPercentage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> progress</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onFileInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fileInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 处理文件列表更新事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文件信息已更新：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fileInfo)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fileList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileInfo,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          url: fileInfo.fileUrl,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          name: fileInfo.fileName,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          uid: file.uid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onIsUploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">isUploading</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;isUploading：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isUploading)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.isUploading </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isUploading</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onIsAutoReUploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">isAutoReUploading</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;isAutoReUploading：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isAutoReUploading)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.isAutoReUploading </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isAutoReUploading</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 调用文件上传逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploader</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, message: response.message })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文件上传失败&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    handleRemove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;options&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      delateFileByPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options.filePath, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.saveType).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (res.success) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;删除成功&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fileList </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fileList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options.fileName)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;删除失败&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div><p>:::</p><h2 id="组件ui层" tabindex="-1">组件UI层 <a class="header-anchor" href="#组件ui层" aria-label="Permalink to &quot;组件UI层&quot;">​</a></h2><p>代码使用示例：</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">file-sharding-upload</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload-percentage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uploadPercentage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file-list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileList</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is-uploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">isUploading</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is-auto-re-uploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">isAutoReUploading</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start-upload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handleStartUpload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle-remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handleRemove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型描述</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>showFileList</td><td>是否显示已上传文件列表</td><td>Boolean</td><td>—</td><td>true</td></tr><tr><td>uploadPercentage</td><td>文件上传进度</td><td>Number</td><td>—</td><td>0</td></tr><tr><td>fileList</td><td>上传文件列表</td><td>Array</td><td>—</td><td>[]</td></tr><tr><td>isUploading</td><td>是否正在上传</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>isAutoReUploading</td><td>是否超时自动重传中</td><td>Boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>start-upload</td><td>点击【点击上传】触发</td><td>选中的文件信息</td></tr><tr><td>handle-remove</td><td>点击 上传文件列表中的【X】触发</td><td>选中的文件基本信息</td></tr></tbody></table><h2 id="分片上传逻辑层" tabindex="-1">分片上传逻辑层 <a class="header-anchor" href="#分片上传逻辑层" aria-label="Permalink to &quot;分片上传逻辑层&quot;">​</a></h2><p>TrFileShardingUpload类将分片上传逻辑进行封装，对外暴露必要的属性值和钩子函数，以支持不同的UI。</p><p>基本用法：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uploader</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TrFileShardingUpload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file, businessType, saveType)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 处理进度更新事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;上传进度：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onFileInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fileInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 处理文件列表更新事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文件信息已更新：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fileInfo)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onIsUploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">isUploading</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;isUploading：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isUploading)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uploader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onIsAutoReUploading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">isAutoReUploading</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;isAutoReUploading：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isAutoReUploading)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用文件上传逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uploader</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="attributes-1" tabindex="-1">Attributes <a class="header-anchor" href="#attributes-1" aria-label="Permalink to &quot;Attributes&quot;">​</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型描述</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>file</td><td>上传的文件</td><td>Number</td><td>-</td><td>—</td></tr><tr><td>businessType</td><td>业务类型/桶名，存储的文件夹名称</td><td>String</td><td>jxcc-common-file-dev</td><td>—</td></tr><tr><td>saveType</td><td>存储方案</td><td>String</td><td>minio / fastdfs</td><td>—</td></tr><tr><td>autoReNum</td><td>最大超时自动重传次数</td><td>Number</td><td>—</td><td>3</td></tr><tr><td>chunkSize</td><td>分片大小，暂时不可配置只支持默认值</td><td>Number</td><td>—</td><td>5 * 1024 * 1024</td></tr></tbody></table><h3 id="events-1" tabindex="-1">Events <a class="header-anchor" href="#events-1" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>onProgress</td><td>上传进度事件监听</td><td>(progress)=&gt;{}</td></tr><tr><td>onFileInfo</td><td>上传文件的信息更新监听</td><td>(fileInfo)=&gt;{}</td></tr><tr><td>onIsUploading</td><td>是否正在上传状态监听</td><td>(isUploading)=&gt;{}</td></tr><tr><td>onIsAutoReUploading</td><td>是否正在自动超时重传监听</td><td>(isAutoReUploading)=&gt;{}</td></tr><tr><td>uploadFile</td><td>文件上传函数</td><td>—</td></tr></tbody></table>`,18),In=JSON.parse('{"title":"TrFileShardingUpload 文件分片上传","description":"","frontmatter":{},"headers":[],"relativePath":"articles/05-components/file-sharding-upload.md","filePath":"articles/05-components/file-sharding-upload.md","lastUpdated":1711329923000}'),Dn={name:"articles/05-components/file-sharding-upload.md"},Ln=Object.assign(Dn,{setup(s){return(i,n)=>(D(),M("div",null,[_n,H(Pn),On]))}});export{In as __pageData,Ln as default};
